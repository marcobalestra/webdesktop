const mabroMenu=async(me,mb)=>{let $p=$(me.target);$p.hasClass("mabro-menu-toggler")||($p=$p.closest(".mabro-menu-toggler"));const obj={highlight:$p,parent:$p,type:"menu",content:[]};obj.content.push({icon:_icon("mabro-app"),label:_l("menu-mabro-About"),action:()=>{mb.plugin("about",mb.getProp("mabro_base")+"../static/about.html")}}),glob.menu(me.originalEvent,obj)},buildMabroMenu=async($m,mb)=>{if(!$m.hasClass("mabro-menu-inited")){var id=glob.uid("menu-");const $mbmenu=$(`<div class="dropdown mabro-menu-toggler" id="${id}"></div>`).append(_icon("mabro-app"));$mbmenu.on("click",e=>{mabroMenu(e,mb)}),$m.append($mbmenu),$m.append('<div class="mabro-menu-bars"></div>'),$m.addClass("mabro-menu-inited")}return $(".mabro-menu-bars",$m)},getClass=async mb=>{return class{#prop;#menu;constructor(manifest){this.#prop={},this.#prop.registered={system:[],apps:[]},this.#prop.manifest=manifest,this.#prop.mb=mb,this.#prop.target=$("body > .mabro-main-container > .mabro-menubar-wrap"),$(document.body).on("mabro:changedApp",()=>{this.refresh()})}async init(){glob.localize.loaded?this.#prop.menus=await buildMabroMenu(this.#prop.target,mb):setTimeout(()=>{this.init(mb)},100)}async refresh(){}}};export default getClass;