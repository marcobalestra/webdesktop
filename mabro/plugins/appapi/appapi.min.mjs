const API=class{#sys;#app;constructor(sysapi){this.#sys=sysapi}init(){this.#app||(this.#app=this.#sys.getApp())}event(name,data){this.#app&&"function"==typeof this.#app.event&&this.#app.event(name,data)}},activateWindow=$w=>{var id=$w.attr("id");const dd=$(document.body).data("mabro");dd.activeWindow!=id&&($(".mabro-app").removeClass("active").addClass("inactive"),$w.hasClass("mabro-webdesktop")&&$(".mabro-app").hide(),$w.removeClass("inactive").addClass("active").show(),dd.activeWindow=id,$(document.body).data("mabro",dd),$(document.body).trigger("mabro:changedApp"))};$(document).on("click",".mabro-app.inactive",e=>{activateWindow($(e))});const getClass=async mb=>{return class{#prop;#api;#app;constructor(){this.#prop={},this.#prop.mb=mb}async init(uri,manifest,options){this.#prop.uri=uri,this.#prop.manifest=manifest,options?(options.system&&(this.#prop.system=!0),options.win&&($(options.win).attr("id")||$(options.win).attr("id",glob.uid("win")),this.#prop.win=options.win),this.#prop.options=options):this.#prop.options={}}async dispatch(name,data){if(this.#app&&this.#prop.events&&"string"==typeof name&&!name.startsWith("private:")&&!name.startsWith("system:"))return await this.#app.event(name,data)}async event(name,data){return"run"===name&&await this.load(),this.dispatch(name,data)}getApp(){return this.#app}getAppApi(){return this.#api}getUri(){return this.#prop.uri}async load(){if(this.#app)return this.#app;if(!this.#prop.classfunc){const m=this.#prop.manifest;m.script.includes("<mjs_suffix>")&&(m.script=m.script.replace(/\<mjs_suffix\>/,this.#prop.mb.getProp("mjs_suffix")));let mod,cl;try{mod=await import(`${m.base_uri}${m.script}`)}catch(e){console.log("Error loading app script",m,e)}if(mod)try{"function"==typeof(cl=await mod.default(m))&&(this.#prop.classfunc=cl)}catch(e){console.log("Error loading app class",m,e)}}if(this.#prop.classfunc){this.#api||(this.#api=new API(this));try{this.#app=new this.#prop.classfunc(this.#api,this.#prop.options)}catch(e){console.log("Error loading app",e)}}return this.#app&&("function"==typeof this.#app.event&&(this.#prop.events=!0),this.#api.init(),this.#prop.mb.launchedApp(this.#prop.uri)),this.#app}async win(){if(this.#prop.win)return this.#prop.win}}};export default getClass;