const initFs=async mb=>{if(glob.localize.loaded){const fs=await mb.getFs();var $ntb=fs.existingStorages();if(1==$ntb.length)return fs.init($ntb[0]),void mb.start();const $dlog=await mb.plugin("dialog",{canclose:!1}),$body=$dlog.body();let secured=!1,password="";0==$ntb.length?$dlog.title(_l("StoragesNotFound")):$dlog.title(_l("StoragesMultiFound"));var $lsb=glob.uid("btn"),$ntb=$(`<p><input name="secured" checked="checked" type="radio" id="${$lsb}"><label for="${$lsb}"> <b>${_l("ComputerNotTrusted")}</b></label><br /><i>“${_l("ComputerNotTrustedDesc")}”</i><small style="display:block;font-size:75%;">${_l("ComputerNotTrustedHelp")}</small></p>`);$("input",$ntb).on("click",()=>{secured=!1});$lsb=glob.uid("btn"),$lsb=$(`<p><input name="secured" type="radio" id="${$lsb}"><label for="${$lsb}"> <b>${_l("ComputerIsTrusted")}</b></label><br /><i>“${_l("ComputerIsTrustedDesc")}”</i><small style="display:block;font-size:75%;">${_l("ComputerIsTrustedHelp")}</small></p>`);if($("input",$lsb).on("click",()=>{secured=!0}),$body.append($("<p></p>").append(_l("Privacy level"),":"),$('<form class="d-block ml-4"></form>').append($ntb,$lsb)),window.location.href.startsWith("https://")){const $pwd=$(`<p><input type="password" class="form-control"><small style="display:block;font-size:75%;">${_l("PasswordHelp")}</small></p>`);$("input",$pwd).on("keyup change",()=>{password=$("input",$pwd).val()}),$body.append($("<p></p>").append(_l("Password"),":"),$('<form class="d-block ml-4"></form>').append($pwd))}$body.append($("<div></div>").append(_l("ComputerChoiceCanSaveSession")));$lsb=$(`<button type="button" class="btn btn-secondary mr-auto">${_l("StorageInitLoad")}</button>`);const $nsb=$(`<button type="button" class="btn btn-primary">${_l("StorageInitNew")}</button>`);$nsb.on("click",async()=>{$dlog.body(_l("Operation in progress")),$dlog.footer(""),await fs.init(secured?"local":"session",password),$dlog.close(),mb.start()}),$dlog.footer().append($lsb,$nsb),$dlog.open()}else setTimeout(()=>{initFs(mb)},100)},existingStorages=()=>{const out=[];return window.sessionStorage.getItem("mabro")&&out.push("session"),window.localStorage.getItem("mabro")&&out.push("local"),out},string2arraybuffer=str=>{let encoder=new TextEncoder("utf-8");return encoder.encode(str)},arraybuffer2string=buffer=>{let decoder=new TextDecoder("utf-8");return decoder.decode(buffer)},VAULT=class{#prop;constructor(password){this.#prop={password:password||"",key_object:null,vector:window.crypto.getRandomValues(new Uint8Array(16))}}async getKey(){if(this.#prop.key_object)return this.#prop.key_object;if(!this.#prop.password)return!1;var importedPassword=string2arraybuffer(this.#prop.password),pepper=string2arraybuffer("¡Hasta la victoria siempre!"),importedPassword=await window.crypto.subtle.importKey("raw",importedPassword,{name:"PBKDF2"},!1,["deriveKey"]);return this.#prop.key_object=await window.crypto.subtle.deriveKey({name:"PBKDF2",salt:pepper,iterations:1e5,hash:"SHA-256"},importedPassword,{name:"AES-GCM",length:128},!1,["encrypt","decrypt"]),this.#prop.key_object}setPassword(password){this.#prop.password=password,this.#prop.key_object=null}async isEncrypted(){return!(!this.#prop.password||!await this.getKey())}async encrypt(data){var key_object=await this.getKey();return"object"==typeof data&&(data=JSON.stringify(data)),data=key_object?(data=string2arraybuffer(data),data=await window.crypto.subtle.encrypt({name:"AES-GCM",iv:this.#prop.vector},key_object,data),data=arraybuffer2string(data),window.encodeURIComponent(data)):window.btoa(window.encodeURIComponent(data))}async decrypt(data){var key_object=await this.getKey();if(key_object){data=window.decodeURIComponent(data);try{data=await window.crypto.subtle.decrypt({name:"AES-GCM",iv:this.#prop.vector},key_object,data)}catch(e){return console.log("vault decrypt",e),{error:"decrypt",message:e.message}}data=arraybuffer2string(data)}else data=window.decodeURIComponent(window.atob(data));return JSON.parse(data)}},getClass=async mb=>{return class{#prop;#storage;#data;#vault;constructor(manifest){this.#prop={},this.#prop.manifest=manifest,this.#prop.mb=mb,this.#prop.myuri=manifest.base_uri,this.#vault=new VAULT}async boot(){initFs(mb)}async init(mode,password){this.#storage="local"===mode?window.localStorage:window.sessionStorage,password&&this.#vault.setPassword(password),this.#storage.getItem("mabro")?this.#data=await this.#vault.decrypt(this.#storage.getItem("mabro")):(this.#data=await glob.get(this.#prop.myuri+"skeleton.json"),this.commit())}commit(force){this.#prop.commitTimeout&&(window.clearTimeout(this.#prop.commitTimeout),delete this.#prop.commitTimeout),force?this.#vault.encrypt(this.#data).then(enc=>{this.#storage.setItem("mabro",enc),this.#vault.isEncrypted().then(isE=>{isE?this.#storage.setItem("mabro-encrypted","true"):this.#storage.getItem("mabro-encrypted")&&this.#storage.removeItem("mabro-encrypted")})}):this.#prop.commitTimeout=window.setTimeout(()=>{this.commit(!0)},2e3)}existingStorages(){return existingStorages()}}};export default getC