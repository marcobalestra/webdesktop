const getSkeleton=mb=>{const sk={dirs:{},files:{},apps:[],root:glob.uid("dir"),prefs:{}};return sk.dirs[uid]={name:_l("Archive")},sk.apps.push({uri:mb.getProp("mabro_base")+"webdesktop/"}),sk},existingStorages=()=>{const out=[];return window.sessionStorage.getItem("mabro")&&out.push("session"),window.localStorage.getItem("mabro")&&out.push("local"),out},getClass=async()=>{const FS=class{#prop;constructor(mb){this.#prop={},this.#prop.mb=mb}static init=async()=>{};async init(){return await FS.init(this)}existingStorages(){return existingStorages()}};return FS};export default getClass;