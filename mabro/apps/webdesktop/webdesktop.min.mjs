const makeFolderWindow=(wobj,folder)=>{const $w=wobj.wrap();return $w.addClass("wd-folder-window").attr("fsid",folder.id),$w},WDICON=class{#prop;constructor(options){this.#prop={options:options},this.#prop.svg=options.svg||"-",this.#prop.label=options.label||"No name"}get(){return this.#prop.render||(this.#prop.render=WDICON.render(this,this.#prop)),this.#prop.render}click(e){e&&"object"==typeof e&&e.target&&(e.preventDefault(),e.stopPropagation()),this.get().toggleClass("wd-selected"),this.#prop.options.onclick&&this.#prop.options.onclick(e)}contextmenu(e){e&&(e.preventDefault(),e.stopPropagation()),this.#prop.options.oncontextmenu&&this.#prop.options.oncontextmenu(e)}dblclick(e){e&&(e.preventDefault(),e.stopPropagation()),this.get().removeClass("wd-selected"),this.#prop.options.ondblclick&&this.#prop.options.ondblclick(e)}static render(obj,p){const $d=$('<div class="wd-icon"></div>');return $d.append(p.svg),$d.append($("<div></div>").append($("<label></label>").append(p.label))),$d.attr("title",p.label),p.options.node&&$d.attr("fsid",p.options.node.id),p.options.css&&$d.css(p.options.css),$d.on("click",e=>{obj.click(e)}),$d.on("contextmenu",e=>{obj.contextmenu(e)}),$d.on("dblclick",e=>{obj.dblclick(e)}),p.options.nodrag||$d.attr("draggable",!0),$d}},getClass=async manifest=>{return class{#prop;#api;#mb;#wrap;#wclass;#fs;constructor(api,options){options.theme||(options.theme="default"),this.#prop={options:options,manifest:manifest},this.#api=api,this.#mb=options.system,this.#wrap=options.wrap,this.#mb.loadCSS(`${this.#prop.manifest.base_uri}themes/${this.#prop.options.theme}/style.css`),this.#wrap.addClass("mabro-webdesktop mabro-active")}async init(){this.#fs=await this.#mb.getFs();const root=this.#fs.getRoot();this.#prop.mainicon=new WDICON({node:root,label:root.name,svg:this.#prop.manifest.app_icon,id:root.id,css:{position:"absolute",top:"40px",right:"40px"},ondblclick:()=>{this.openFolder(root.id)},nodrag:!0});var i=this.#prop.mainicon.get();this.#wrap.append(i),$(".mabro-main-wrap").on("click",()=>{this.#wrap.children(".wd-icon").removeClass("wd-selected")})}async event(name,data){if("run"===name||"activate"===name)return"activate"===name&&this.#wrap.trigger("click"),this.#wrap}async openFolder(f){"object"==typeof f&&(f=f.id);let $w=$(`.wd-folder-window[fsid="${f}"]`,this.#wrap);if($w.length)return $w.trigger("mouseup"),$w;f=this.#fs.getDir(f);if(f){const w=this.#api.newWindow({title:f.name});return makeFolderWindow(w,f),w.show(),w.wrap()}}async refresh(){}}};export default getClass;